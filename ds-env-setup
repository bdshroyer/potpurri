#!/bin/bash
set -e

usage() {
    echo ""
    echo -e "Usage: $0 name [opts]"
    echo -e "\t-h for help message and options."
    echo ""
}

# Option parsing
while getopts ":hp:" opt; do
    case $opt in
        h)
            # Help command
            usage
            exit 0
            ;;
        p)
            # Python version
            PY_ENV=$OPTARG
            ;;
        \?)
            # Invalid option
            echo ""
            echo "ERROR: Invalid option."
            usage
            exit 1
            ;;
    esac
done
shift $((OPTIND -1))

ENV_NAME=$1
CONDA_BASE=$(conda info --base)

# If an environment exists under the given name, then skip the creation process.
# I chose to do this so that this script could be extended without having to
# burn down the environment every time.
if [ -z $(conda env list | cut -d" " -f 1 | grep -x $ENV_NAME) ]; then
    echo "Creating environment '$ENV_NAME'..."
    conda update -y conda
    conda create -y -n $ENV_NAME python=$PY_ENV
else
    echo "Environment already exists. Skipping creation."
    echo "To rebuild this environment from scratch, first run \`conda env remove --name $ENV_NAME\`."
fi

echo -n "Sourcing conda setup..."
source $(conda info --base)/etc/profile.d/conda.sh
echo "done."


conda activate $ENV_NAME

echo "Installing/upgrading packages in environment $ENV_NAME..."

conda install -y numpy \
    scipy \
    pandas \
    scikit-learn \
    networkx \
    matplotlib \
    seaborn \
    jupyter

conda install -y -c conda-forge jupyter_contrib_nbextensions \
    gitpython

jupyter contrib nbextension install --user


echo "Installation/upgrade for environment $ENV_NAME complete."
